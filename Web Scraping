import requests
from bs4 import BeautifulSoup
import csv

def scrape_books(url):
    """
    Scrapes book names, prices, and ratings from Books to Scrape.
    """
    try:
        response = requests.get(url)
        response.raise_for_status()
    except requests.exceptions.RequestException as e:
        print(f"Error fetching the URL: {e}")
        return []

    soup = BeautifulSoup(response.content, 'html.parser')
    books = []

    # Extract product information
    for book in soup.find_all('article', class_='product_pod'):
        name = book.h3.a['title']
        price = book.find('p', class_='price_color').text.strip()
        rating = book.p['class'][1]  # Rating is stored in class names like 'star-rating Three'

        books.append({
            'Name': name,
            'Price': price,
            'Rating': rating
        })

    return books

def save_to_csv(products, filename="books.csv"):
    """
    Saves the book data to a CSV file.
    """
    keys = products[0].keys() if products else ["Name", "Price", "Rating"]
    with open(filename, 'w', newline='', encoding='utf-8') as csvfile:
        writer = csv.DictWriter(csvfile, fieldnames=keys)
        writer.writeheader()
        writer.writerows(products)
    print(f"Data saved to {filename}")

def main():
    url = "http://books.toscrape.com/"  # Open-source e-commerce site
    print("Fetching book information...")
    books = scrape_books(url)

    if books:
        print(f"Found {len(books)} books.")
        for book in books[:5]:  # Display the first 5 books
            print(book)
        save_to_csv(books)
    else:
        print("No books found. Ensure the URL is correct and try again.")

if __name__ == "__main__":
    main()
